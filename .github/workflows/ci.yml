# Copyright Contributors to the OpenImageIO project.
# SPDX-License-Identifier: Apache-2.0
# https://github.com/AcademySoftwareFoundation/OpenImageIO

name: CI

on:
  workflow_dispatch:
    # This allows manual triggering of the workflow from the web

permissions: read-all


jobs:
  ubuntu:
    name: "Ubuntu ${{matrix.desc}}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - desc: latest releases gcc12 C++17 avx2 exr3.2 ocio2.3
            nametag: linux-latest-releases
            runner: ubuntu-22.04
            cc_compiler: gcc-12
            cxx_compiler: g++-12
            cxx_std: 17
            fmt_ver: 10.1.1
            openexr_ver: v3.2.4
            pybind11_ver: v2.12.0
            python_ver: "3.10"
            simd: avx2,f16c
            setenvs: export LIBJPEGTURBO_VERSION=3.0.1
                            LIBRAW_VERSION=0.21.2
                            LIBTIFF_VERSION=v4.6.0
                            OPENCOLORIO_VERSION=v2.3.2
                            OPENJPEG_VERSION=v2.4.0
                            PTEX_VERSION=v2.4.2
                            PUGIXML_VERSION=v1.14
                            WEBP_VERSION=v1.3.0
                            FREETYPE_VERSION=VER-2-13-2
                            EXTRA_DEP_PACKAGES="libboost-dev"
          
    runs-on: ${{ matrix.runner }}
    env:
      CXX: ${{matrix.cxx_compiler}}
      CC: ${{matrix.cc_compiler}}
      CMAKE_CXX_STANDARD: ${{matrix.cxx_std}}
      USE_SIMD: ${{matrix.simd}}
      FMT_VERSION: ${{matrix.fmt_ver}}
      OPENEXR_VERSION: ${{matrix.openexr_ver}}
      PYBIND11_VERSION: ${{matrix.pybind11_ver}}
      PYTHON_VERSION: ${{matrix.python_ver}}
    steps:
      # We would like to use harden-runner, but it flags too many false
      # positives, every time we download a dependency. We should use it only
      # on CI runs where we are producing artifacts that users might rely on.
      # - name: Harden Runner
      #   uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813 # v1.4.3
      #   with:
      #     egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Prepare ccache timestamp
        id: ccache_cache_keys
        run: echo "date=`date -u +'%Y-%m-%dT%H:%M:%SZ'`" >> $GITHUB_OUTPUT
      - name: ccache
        id: ccache
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        with:
          path: /tmp/ccache
          key: ${{github.job}}-${{matrix.nametag}}-${{ steps.ccache_cache_keys.outputs.date }}
          restore-keys: ${{github.job}}-
          save-always: true
      - name: Build setup
        run: |
            ${{matrix.setenvs}}
            src/build-scripts/ci-startup.bash
      - name: Dependencies
        run: |
            ${{matrix.depcmds}}
            src/build-scripts/gh-installdeps.bash
      - name: Build
        run: src/build-scripts/ci-build.bash
      - name: Testsuite
        if: matrix.skip_tests != '1'
        run: src/build-scripts/ci-test.bash
      - uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        if: failure()
        with:
          name: oiio-${{github.job}}-${{matrix.nametag}}
          path: |
            build/cmake-save
            build/testsuite/*/*.*
            ${{ matrix.extra_artifacts }}
            !build/testsuite/oiio-images
            !build/testsuite/openexr-images
            !build/testsuite/fits-images
            !build/testsuite/j2kp4files_v1_5

  windows:
    if: 0
    name: "${{matrix.desc}} VS${{matrix.vsver}}"
    strategy:
      fail-fast: false
      matrix:
        include:
          - desc: windows-2019
            runner: windows-2019
            vsver: 2019
            generator: "Visual Studio 16 2019"
            # openexr_ver: v3.2.4
            python_ver: 3.7
            # simd: sse4.2
          - desc: windows-2022
            runner: windows-2022
            vsver: 2022
            generator: "Visual Studio 17 2022"
            # openexr_ver: v3.2.4
            python_ver: "3.9"
            # simd: sse4.2
            # setenvs: export OpenImageIO_BUILD_MISSING_DEPS=none
    runs-on: ${{ matrix.runner }}
    env:
      PYTHON_VERSION: ${{matrix.python_ver}}
      CMAKE_GENERATOR: ${{matrix.generator}}
      OPENEXR_VERSION: ${{matrix.openexr_ver}}
      USE_SIMD: ${{matrix.simd}}
      CTEST_ARGS: "--timeout 180 --repeat after-timeout:6"
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Nuget.exe
        uses: nuget/setup-nuget@a21f25cd3998bf370fde17e3f1b4c12c175172f9 # v2.0.0
      - name: Build setup
        shell: bash
        run: |
            ${{matrix.setenvs}}
            src/build-scripts/ci-startup.bash
      - name: Dependencies
        shell: bash
        run: src/build-scripts/gh-win-installdeps.bash
      - name: Build
        shell: bash
        run: src/build-scripts/ci-build.bash
      - name: Testsuite
        shell: bash
        run: src/build-scripts/ci-test.bash
      - uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        if: failure()
        with:
          name: oiio-${{github.job}}-VS${{matrix.vsver}}
          path: |
            build/cmake-save
            build/testsuite/*/*.*
            build/deps/dist/*/*.cmake
            !build/testsuite/oiio-images
            !build/testsuite/openexr-images
            !build/testsuite/fits-images
            !build/testsuite/j2kp4files_v1_5
